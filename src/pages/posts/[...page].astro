---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths({ paginate }) {
  const allPosts = (
    await getCollection("posts", ({ data }) => !data.draft)
  ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(allPosts, { pageSize: 10 });
}

const { page } = Astro.props;
const base = import.meta.env.BASE_URL;
---

<BaseLayout
  title={`Posts — Page ${page.currentPage} • ooo`}
  description="All posts"
>
  <h1 class="text-2xl font-bold tracking-tight mb-6">All posts</h1>
  <ul class="space-y-6">
    {
      page.data.map(({ slug, data }) => (
        <li class="border-b border-slate-200/70 dark:border-slate-700/50 pb-6">
          <a
            href={`${base}posts/${slug}/`}
            class="text-xl font-semibold hover:underline"
          >
            {data.title}
          </a>
          <div class="text-sm text-slate-500">
            <time datetime={data.pubDate.toISOString()}>
              {data.pubDate.toDateString()}
            </time>
          </div>
          <p class="mt-2 text-slate-700 dark:text-slate-300">
            {data.description}
          </p>
        </li>
      ))
    }
  </ul>

  <nav class="mt-8 flex items-center justify-between">
    {
      page.url.prev && (
        <a class="hover:underline" href={page.url.prev}>
          ← Newer
        </a>
      )
    }
    <span class="text-sm text-slate-500"
      >Page {page.currentPage} of {page.lastPage}</span
    >
    {
      page.url.next && (
        <a class="hover:underline" href={page.url.next}>
          Older →
        </a>
      )
    }
  </nav>
</BaseLayout>
